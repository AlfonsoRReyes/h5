% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/CommonFG.R
\docType{class}
\name{CommonFG}
\alias{CommonFG}
\alias{CommonFG-class}
\alias{[,CommonFG,character,character,missing-method}
\alias{[,CommonFG,character,missing,missing-method}
\alias{[<-,CommonFG,character,character-method}
\alias{[<-,CommonFG,missing,character-method}
\alias{closeh5}
\alias{createDataSet}
\alias{createDataSet,CommonFG,character,ANY,missing,missing,ANY,ANY,ANY,missing-method}
\alias{createDataSet,CommonFG,character,missing,character,integer,ANY,ANY,ANY,ANY-method}
\alias{createGroup}
\alias{createGroup,CommonFG,character-method}
\alias{existsGroup}
\alias{existsGroup,CommonFG,character-method}
\alias{getH5Group}
\alias{getH5Group,CommonFG,character-method}
\alias{openDataSet}
\alias{openDataSet,CommonFG,character-method}
\alias{openGroup}
\alias{openGroup,CommonFG,character-method}
\title{The CommonFG class}
\usage{
createGroup(.Object, groupname)

\S4method{createGroup}{CommonFG,character}(.Object, groupname)

openGroup(.Object, groupname)

\S4method{openGroup}{CommonFG,character}(.Object, groupname)

existsGroup(.Object, groupname)

\S4method{existsGroup}{CommonFG,character}(.Object, groupname)

createDataSet(.Object, datasetname, data, type, dimensions,
  chunksize = ChunkSize(data), maxdimensions = rep(NA_integer_,
  length(GetDimensions(data))), compression = 4L, size = -1)


  \S4method{createDataSet}{CommonFG,character,missing,character,integer,ANY,ANY,ANY,ANY}(.Object,
  datasetname, type, dimensions, chunksize, maxdimensions, compression, size)


  \S4method{createDataSet}{CommonFG,character,ANY,missing,missing,ANY,ANY,ANY,missing}(.Object,
  datasetname, data, chunksize, maxdimensions, compression)

openDataSet(.Object, datasetname, type)

\S4method{openDataSet}{CommonFG,character}(.Object, datasetname, type)

closeh5(.Object)

\S4method{[}{CommonFG,character,missing,missing}(x, i, j, ..., drop = TRUE)

\S4method{[}{CommonFG,character,character,missing}(x, i, j, ..., drop = TRUE)

\S4method{[}{CommonFG,character,character}(x, i, j, ...) <- value

\S4method{[}{CommonFG,missing,character}(x, i, j, ...) <- value

getH5Group(.Object, groupname)

\S4method{getH5Group}{CommonFG,character}(.Object, groupname)
}
\arguments{
\item{.Object}{CommonFG; S4 object of class \code{CommonFG};}

\item{groupname}{character; HDF5 Group name to be used.}

\item{datasetname}{character; HDF5 DataSet name to be used.}

\item{data}{object; Object to be stored in HDF5 file, can be either of type vector, matrix or array.}

\item{type}{character; Character specifiying data type, can be either one of:
   \describe{
       \item{double}{Double precision real number.}
       \item{integer}{32 Bit Integer}
       \item{logical}{Boolean, which is mapped to 1/0 integer values.}
       \item{character}{Varable--length character strings.}
}}

\item{dimensions}{integer; Dimensions of dataset to be created.}

\item{chunksize}{integer; Chunksize to be used for dataset.}

\item{maxdimensions}{integer; Maximum dimensions used for dataset, NA is mapped to 'unlimited'.}

\item{compression}{integer; Default GZIP compression level to be used, from 0 (no compression) to 9 (maximum compression),
defaults to \code{4}.}

\item{size}{integer; Datatype size to be used, only relevant for character strings.}

\item{x}{CommonFG; object to be subsetted}

\item{i}{character/integer; groupname}

\item{j}{character; name of dataset}

\item{...}{Additional arguments for subsetting}

\item{drop}{logical; specify if class of result set should be dropped (not implemented yet).}

\item{value}{vector/matrix/array; Value to be assigend to dataset}
}
\description{
The CommonFG class which links H5File with H5Group.
}

